extends ../wrapper

block content
	.container.content
		.tab-v3
			ul.nav.nav-pills.list-inline.margin-bottom-40
				li: a(href="/dashboard/") Dashboard
				li: a(href="/tasks/create/") Create task

		-function prettyDate(dateString){
			-var date = new Date(dateString);
			-var d = date.getDate();
			-var m = date.getMonth();
			-var y = date.getFullYear();
			-var h = date.getHours();
			-var min = date.getMinutes();
			-return {date: d+'/'+m+'/'+y, time: h+':'+min};
		-}

		ul.timeline-v2
			each task in tasks
				li
					span #{task.creation_date}
					time.cbp_tmtime
						span #{prettyDate(task.creationDate()).time}
						span #{prettyDate(task.creationDate()).date}
					i.cbp_tmicon.rounded-x.hidden-xs
					div.cbp_tmlabel
						h2: a(href="/tasks/#{task.id()}")= task.name()
						.row
							.col-md-3
								.pie-progress-charts(data-id="#{task.id()}", data-percent="#{task.percentComplete() | 0}")
									.inner-pchart
										div.circle(id='#{task.id()}')
										p.text-center STATUS = #{task.status()}

							.col-md-9 
								form.pull-right(action='/tasks/remove/', method='POST')
									input(type='hidden', name='id', value=task.id())
									button.btn.btn-u.btn-brd.rounded.btn-u-sm Remove
								p.
									Number of nodes: #{task.numberOfNodes() || '1'}
								if task.inputArguments()
									p.
										input arguments: #{task.inputArguments()}
								if task.dependencies()
									p.
										dependencies: #{task.dependencies()}
								if task.env()
									p.
										env: #{task.env()}
								p.
									processor: #{task.processor() || '25'}%
								p.
									memory: #{task.memory() || '1024'} mb
								p.
									storage: #{task.storage() || '4096'} mb
								if task.timeout()
									p.
										timeout: #{task.timeout()}
								if task.bash()
									p.
										bash: #{task.bash()}
								if task.fileUrl()
									p.
										file url: #{task.fileUrl()}
								if task.hookStart()
									p.
										hook start: #{task.hookStart()}
								if task.hookEnd()
									p.
										hook end: #{task.hookEnd()}
